name: Shared Notion Changes Detection Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to run against (test/production)'
        required: true
        type: string
      dry_run:
        description: 'Run in dry-run mode (skip PR creation)'
        required: false
        type: boolean
        default: false
      force_pr:
        description: 'Create PR even if no changes detected'
        required: false
        type: boolean
        default: false
    secrets:
      NOTION_API_KEY:
        description: 'Notion API key for the specified environment'
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  notion-changes:
    runs-on: ubuntu-latest
    
    env:
      NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
      ENVIRONMENT: ${{ inputs.environment }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate environment
        run: |
          echo "Running in ${{ inputs.environment }} environment"
          if [ -z "$NOTION_API_KEY" ]; then
            echo "ERROR: NOTION_API_KEY is not set"
            exit 1
          fi
          echo "Environment validation passed"
      
      - name: Run Notion change detection
        id: detect-changes
        run: |
          echo "Running Notion change detection for ${{ inputs.environment }} environment..."
          npm run generate-report
          echo "Change detection completed"
      
      - name: Check for changes
        id: check-changes
        run: |
          echo "Checking for generated reports..."
          if [ -n "$(find reports -name '*.md' -newer .git/FETCH_HEAD 2>/dev/null)" ] || [ "${{ inputs.force_pr }}" = "true" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected or force_pr enabled"
            if [ -n "$(find reports -name '*.md' 2>/dev/null)" ]; then
              echo "Generated report files:"
              find reports -name '*.md' -exec basename {} \; | head -5
            fi
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi
      
      - name: Configure Git
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Generate branch name
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run
        id: branch
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          BRANCH_NAME="${{ inputs.environment }}-notion-changes-${TIMESTAMP}"
          echo "name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "Generated branch name: ${BRANCH_NAME}"
      
      - name: Create and switch to new branch
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run
        run: |
          git checkout -b ${{ steps.branch.outputs.name }}
          echo "Switched to branch: ${{ steps.branch.outputs.name }}"
      
      - name: Check for duplicate PRs
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run
        id: pr-check
        run: |
          # Use dedicated script for comprehensive duplicate PR detection
          ./scripts/check-duplicate-prs.sh "${{ inputs.environment }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate incremental report (Existing PR)
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run && steps.pr-check.outputs.action == 'update_existing'
        id: incremental-report
        run: |
          echo "🔄 Generating incremental report for existing PR..."
          echo "Previous PR branch: ${{ steps.pr-check.outputs.target_pr_branch }}"
          
          # Generate incremental report using the dedicated script
          OUTPUT=$(./scripts/generate-incremental-report.sh "${{ inputs.environment }}" "${{ steps.pr-check.outputs.target_pr_branch }}")
          echo "$OUTPUT"
          
          # Parse outputs and set GitHub Actions outputs
          echo "$OUTPUT" | grep "has-incremental-changes=" | cut -d'=' -f2- | head -1 | xargs -I {} echo "has_incremental_changes={}" >> $GITHUB_OUTPUT
          echo "$OUTPUT" | grep "incremental-report-file=" | cut -d'=' -f2- | head -1 | xargs -I {} echo "incremental_report_file={}" >> $GITHUB_OUTPUT
          echo "$OUTPUT" | grep "changes-summary=" | cut -d'=' -f2- | head -1 | xargs -I {} echo "changes_summary={}" >> $GITHUB_OUTPUT
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
      
      - name: Commit changes (New PR)
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run && steps.pr-check.outputs.action == 'create_new'
        run: |
          git add reports/ state/ --force
          DATE=$(date +'%Y-%m-%d')
          git commit -m "feat: add automated Notion changes report for ${{ inputs.environment }} environment - ${DATE}

          🤖 Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
          echo "Changes committed successfully"
      
      - name: Push changes (New PR)
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run && steps.pr-check.outputs.action == 'create_new'
        run: |
          git push origin ${{ steps.branch.outputs.name }}
          echo "Changes pushed to remote branch: ${{ steps.branch.outputs.name }}"
      
      - name: Update existing PR branch (Incremental Changes)
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run && steps.pr-check.outputs.action == 'update_existing' && steps.incremental-report.outputs.has_incremental_changes == 'true'
        run: |
          echo "🔄 Updating existing PR #${{ steps.pr-check.outputs.target_pr_number }}"
          echo "   Target branch: ${{ steps.pr-check.outputs.target_pr_branch }}"
          echo "   Incremental changes: ${{ steps.incremental-report.outputs.changes_summary }}"
          
          # Fetch latest changes and switch to existing PR branch
          git fetch origin
          git checkout -B ${{ steps.pr-check.outputs.target_pr_branch }} origin/${{ steps.pr-check.outputs.target_pr_branch }}
          
          # Add incremental changes
          git add reports/ state/ --force
          DATE=$(date +'%Y-%m-%d')
          git commit -m "feat: add incremental Notion changes for ${{ inputs.environment }} environment - ${DATE}

          ${{ steps.incremental-report.outputs.changes_summary }}

          🤖 Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
          
          # Push to existing branch
          git push origin ${{ steps.pr-check.outputs.target_pr_branch }}
          echo "✅ Updated existing PR branch with incremental changes"
          
      - name: Skip PR update (No incremental changes)
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run && steps.pr-check.outputs.action == 'update_existing' && steps.incremental-report.outputs.has_incremental_changes != 'true'
        run: |
          echo "ℹ️  Skipping PR update - no incremental changes detected"
          echo "   Existing PR #${{ steps.pr-check.outputs.target_pr_number }} remains unchanged"
          echo "   Summary: ${{ steps.incremental-report.outputs.changes_summary }}"
      
      - name: Create new pull request
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run && steps.pr-check.outputs.action == 'create_new'
        id: create-pr
        run: |
          DATE=$(date +'%Y-%m-%d')
          ENVIRONMENT_UPPER=$(echo "${{ inputs.environment }}" | tr '[:lower:]' '[:upper:]')
          
          PR_TITLE="📊 Notion Changes Report (${ENVIRONMENT_UPPER}) - ${DATE}"
          
          # Create PR body using temporary file to handle complex content
          cat > /tmp/pr_body.md <<EOF
          ## 📊 Notion Database Changes Report

          This automated report contains changes detected in the **${{ inputs.environment }}** environment Notion databases.

          EOF
          
          # Add detected changes section
          if [ -n "$(find reports -name '*.md' 2>/dev/null)" ]; then
            echo "## 📋 Detected Changes" >> /tmp/pr_body.md
            echo "" >> /tmp/pr_body.md
            
            # Add each report file's contents
            for report_file in $(find reports -name "*.md" | head -5); do
              if [ -f "$report_file" ]; then
                echo "### 📄 $(basename "$report_file")" >> /tmp/pr_body.md
                echo "" >> /tmp/pr_body.md
                cat "$report_file" >> /tmp/pr_body.md
                echo "" >> /tmp/pr_body.md
                echo "---" >> /tmp/pr_body.md
                echo "" >> /tmp/pr_body.md
              fi
            done
          else
            echo "## 📋 Detected Changes" >> /tmp/pr_body.md
            echo "" >> /tmp/pr_body.md
            echo "No specific changes detected, but PR was forced via force_pr option." >> /tmp/pr_body.md
            echo "" >> /tmp/pr_body.md
          fi
          
          # Add footer sections
          cat >> /tmp/pr_body.md <<EOF
          ### 🔧 Environment Details
          - **Environment**: ${{ inputs.environment }}
          - **Generated**: ${DATE}
          - **Branch**: ${{ steps.branch.outputs.name }}
          - **Workflow Run**: [\#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ### 📋 Next Steps
          1. Review the detected changes above
          2. Verify the changes are accurate
          3. Merge this PR when ready

          ---
          
          🤖 Generated with [Claude Code](https://claude.ai/code)
          EOF
          
          PR_URL=$(gh pr create \
            --title "${PR_TITLE}" \
            --body-file /tmp/pr_body.md \
            --head "${{ steps.branch.outputs.name }}" \
            --base main)
          
          echo "pr-url=${PR_URL}" >> $GITHUB_OUTPUT
          echo "✅ Pull request created successfully: ${PR_URL}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update existing pull request (Incremental)
        if: steps.check-changes.outputs.has-changes == 'true' && !inputs.dry_run && steps.pr-check.outputs.action == 'update_existing' && steps.incremental-report.outputs.has_incremental_changes == 'true'
        id: update-pr
        run: |
          DATE=$(date +'%Y-%m-%d')
          ENVIRONMENT_UPPER=$(echo "${{ inputs.environment }}" | tr '[:lower:]' '[:upper:]')
          
          echo "🔄 Updating existing PR #${{ steps.pr-check.outputs.target_pr_number }}"
          
          # Create updated PR body with incremental changes
          cat > /tmp/pr_body_update.md <<EOF
          ## 📊 Notion Database Changes Report (Incremental Update)

          This report contains **incremental changes** detected in the **${{ inputs.environment }}** environment Notion databases.

          ### 📈 Latest Update Summary
          **Updated**: ${DATE}  
          **Changes**: ${{ steps.incremental-report.outputs.changes_summary }}

          EOF
          
          # Add incremental report content
          INCREMENTAL_REPORT="${{ steps.incremental-report.outputs.incremental_report_file }}"
          if [ -n "$INCREMENTAL_REPORT" ] && [ -f "$INCREMENTAL_REPORT" ]; then
            echo "## 🆕 Incremental Changes" >> /tmp/pr_body_update.md
            echo "" >> /tmp/pr_body_update.md
            cat "$INCREMENTAL_REPORT" >> /tmp/pr_body_update.md
            echo "" >> /tmp/pr_body_update.md
            echo "---" >> /tmp/pr_body_update.md
            echo "" >> /tmp/pr_body_update.md
          fi
          
          # Add note about full history
          echo "### 📋 Full Change History" >> /tmp/pr_body_update.md
          echo "" >> /tmp/pr_body_update.md
          echo "For the complete change history, see the [Files Changed](./../../files) tab or individual report files in the \`reports/\` directory." >> /tmp/pr_body_update.md
          echo "" >> /tmp/pr_body_update.md
          
          # Add footer sections
          cat >> /tmp/pr_body_update.md <<EOF
          ### 🔧 Environment Details
          - **Environment**: ${{ inputs.environment }}
          - **Last Updated**: ${DATE}
          - **Branch**: ${{ steps.pr-check.outputs.target_pr_branch }}
          - **Workflow Run**: [\#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ### 📋 Next Steps
          1. Review the updated changes above
          2. Verify the changes are accurate
          3. Merge this PR when ready

          ---
          
          🤖 Generated with [Claude Code](https://claude.ai/code)
          EOF
          
          # Update PR description
          gh pr edit "${{ steps.pr-check.outputs.target_pr_number }}" \
            --body-file /tmp/pr_body_update.md
          
          PR_URL=$(gh pr view "${{ steps.pr-check.outputs.target_pr_number }}" --json url --jq '.url')
          echo "pr-url=${PR_URL}" >> $GITHUB_OUTPUT
          echo "✅ Pull request updated successfully: ${PR_URL}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Dry run summary
        if: inputs.dry_run
        run: |
          echo "=== DRY RUN SUMMARY ==="
          echo "Environment: ${{ inputs.environment }}"
          echo "Changes detected: ${{ steps.check-changes.outputs.has-changes }}"
          echo "Force PR: ${{ inputs.force_pr }}"
          
          if [ "${{ steps.check-changes.outputs.has-changes }}" = "true" ]; then
            echo "✅ Would process changes with the following workflow:"
            echo "   - Generate full Notion change report"
            echo "   - Check for duplicate PRs"
            echo "   - If new PR: Create new PR with full report"
            echo "   - If existing PR: Generate incremental report and update existing PR"
            echo "   - Skip PR update if no incremental changes detected"
          else
            echo "ℹ️  No changes detected, PR would not be created"
          fi
          echo "🧪 Dry run completed successfully"
      
      - name: Final summary
        if: always()
        run: |
          echo "=== WORKFLOW SUMMARY ==="
          echo "Environment: ${{ inputs.environment }}"
          echo "Dry run mode: ${{ inputs.dry_run }}"
          echo "Force PR: ${{ inputs.force_pr }}"
          echo "Changes detected: ${{ steps.check-changes.outputs.has-changes }}"
          
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "Status: Dry run completed"
          elif [ "${{ steps.check-changes.outputs.has-changes }}" = "true" ]; then
            if [ -n "${{ steps.create-pr.outputs.pr-url }}" ]; then
              echo "Status: PR created successfully"
              echo "PR URL: ${{ steps.create-pr.outputs.pr-url }}"
            else
              echo "Status: Changes detected but PR creation failed"
            fi
          else
            echo "Status: No changes detected"
          fi