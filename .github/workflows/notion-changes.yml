name: Notion Changes Detection

on:
  schedule:
    - cron: '0 0,9 * * *'  # Daily at 9:00 and 18:00 JST (0:00 and 9:00 UTC)
  workflow_dispatch:
    inputs:
      force_pr:
        description: 'Create PR even if no changes detected'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  notion-changes:
    runs-on: ubuntu-latest
    
    env:
      NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate environment
        run: |
          echo "Checking prerequisites..."
          if [ -z "$NOTION_API_KEY" ]; then
            echo "ERROR: NOTION_API_KEY is not set"
            exit 1
          fi
          echo "Environment validation passed"
      
      - name: Run Notion change detection
        id: detect-changes
        run: |
          echo "Running Notion change detection..."
          npm run generate-report
          echo "Change detection completed"
        continue-on-error: false
      
      - name: Check for changes
        id: check-changes
        run: |
          echo "Checking for generated reports..."
          if [ -n "$(find reports -name '*.md' -newer state/last-check 2>/dev/null || find reports -name '*.md' -mmin -10 2>/dev/null || echo '')" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in Notion data"
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT  
            echo "No changes detected"
          fi
      
      - name: Handle no changes
        if: steps.check-changes.outputs.has-changes == 'false' && inputs.force_pr != true
        run: |
          echo "No changes detected and force_pr is not enabled."
          echo "Workflow will complete without creating a PR."
          exit 0
      
      - name: Check for existing PR
        id: check-existing-pr
        if: steps.check-changes.outputs.has-changes == 'true' || inputs.force_pr == true
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Checking for existing PRs..."
          EXISTING_PR=$(gh pr list --state open --head notion-changes-* --limit 1 --json number,headRefName 2>/dev/null || echo "")
          
          if [ -n "$EXISTING_PR" ] && [ "$EXISTING_PR" != "[]" ]; then
            echo "Found existing PR with notion-changes branch. Skipping PR creation."
            echo "existing-pr=true" >> $GITHUB_OUTPUT
          else
            echo "No existing PR found. Proceeding with PR creation."
            echo "existing-pr=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Generate branch name
        id: branch-name
        if: (steps.check-changes.outputs.has-changes == 'true' || inputs.force_pr == true) && steps.check-existing-pr.outputs.existing-pr != 'true'
        run: |
          TIMESTAMP=$(date -u +"%Y%m%d-%H%M%S")
          BRANCH_NAME="notion-changes-${TIMESTAMP}"
          echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "Generated branch name: ${BRANCH_NAME}"
      
      - name: Configure Git
        if: (steps.check-changes.outputs.has-changes == 'true' || inputs.force_pr == true) && steps.check-existing-pr.outputs.existing-pr != 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Create branch
        if: (steps.check-changes.outputs.has-changes == 'true' || inputs.force_pr == true) && steps.check-existing-pr.outputs.existing-pr != 'true'
        run: |
          git checkout -b ${{ steps.branch-name.outputs.branch }} || echo "Branch creation failed but continuing..."
      
      - name: Commit changes
        if: (steps.check-changes.outputs.has-changes == 'true' || inputs.force_pr == true) && steps.check-existing-pr.outputs.existing-pr != 'true'
        run: |
          git add reports/ || echo "No new files to add"
          if [ -n "$(git diff --cached)" ]; then
            REPORT_DATE=$(date -u +"%Y-%m-%d")
            git commit -m "feat: add automated Notion changes report for ${REPORT_DATE}

            ü§ñ Generated with [Claude Code](https://claude.ai/code)
            
            Co-Authored-By: Claude <noreply@anthropic.com>" || echo "Commit failed but continuing..."
          else
            echo "No changes to commit"
          fi
      
      - name: Push branch
        if: (steps.check-changes.outputs.has-changes == 'true' || inputs.force_pr == true) && steps.check-existing-pr.outputs.existing-pr != 'true'
        run: |
          git push origin ${{ steps.branch-name.outputs.branch }} || echo "Push failed but continuing..."
      
      - name: Create pull request
        if: (steps.check-changes.outputs.has-changes == 'true' || inputs.force_pr == true) && steps.check-existing-pr.outputs.existing-pr != 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          REPORT_DATE=$(date -u +"%Y-%m-%d")
          PR_TITLE="üìä Notion Changes Report - ${REPORT_DATE}"
          
          # Count changes from the latest report
          LATEST_REPORT=$(find reports -name '*.md' -type f -exec ls -t {} \; | head -n 1 2>/dev/null || echo "")
          CHANGES_SUMMARY="Automated Notion changes detection report"
          
          if [ -f "$LATEST_REPORT" ]; then
            CHANGES_SUMMARY=$(grep -E "ÂêàË®àÂ§âÊõ¥Êï∞|Total changes" "$LATEST_REPORT" | head -n 1 || echo "Changes detected")
          fi
          
          PR_BODY="## üìã Automated Notion Changes Report
          
          This PR contains an automatically generated report of changes detected in the configured Notion databases.
          
          **Summary:** ${CHANGES_SUMMARY}
          
          **Report file:** \`$(basename "$LATEST_REPORT" 2>/dev/null || echo "Generated report")\`
          
          ---
          
          ü§ñ This PR was created automatically by GitHub Actions
          üìÖ Generated on: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          "
          
          gh pr create \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --base main \
            --head ${{ steps.branch-name.outputs.branch }}
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Workflow failed!"
          echo "Failed step: ${{ github.job }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Check the workflow logs for more details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"