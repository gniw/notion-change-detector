name: Notion Changes Detection

on:
  schedule:
    - cron: '0 0,9 * * *'  # Daily at 9:00 and 18:00 JST (0:00 and 9:00 UTC)
  workflow_dispatch:
    inputs:
      force_pr:
        description: 'Create PR even if no changes detected'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  notion-changes:
    runs-on: ubuntu-latest
    
    env:
      NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate environment
        run: |
          if [ -z "$NOTION_API_KEY" ]; then
            echo "ERROR: NOTION_API_KEY is not set"
            exit 1
          fi
          echo "Environment validation passed"
      
      - name: Run Notion change detection
        id: detect-changes
        run: |
          echo "Running Notion change detection..."
          
          OUTPUT=$(npm run generate-report 2>&1)
          echo "$OUTPUT"
          
          # Parse GitHub Actions output variables from application
          HAS_CHANGES=$(echo "$OUTPUT" | grep "has-changes=" | cut -d'=' -f2- | tail -1)
          TOTAL_CHANGES=$(echo "$OUTPUT" | grep "total-changes=" | cut -d'=' -f2- | tail -1)
          REPORT_FILE=$(echo "$OUTPUT" | grep "report-file=" | cut -d'=' -f2- | tail -1)
          
          echo "has-changes=${HAS_CHANGES:-false}" >> $GITHUB_OUTPUT
          echo "total-changes=${TOTAL_CHANGES:-0}" >> $GITHUB_OUTPUT
          echo "report-file=${REPORT_FILE}" >> $GITHUB_OUTPUT
          
          if [ "${{ inputs.force_pr }}" = "true" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Force PR enabled - overriding change detection"
          fi
          
          echo "Change detection completed"
      
      - name: Check for changes
        id: check-changes
        run: |
          # Check if report files were generated
          if ls reports/*.md 1> /dev/null 2>&1; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in reports directory"
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi
      
      - name: Configure Git
        if: steps.detect-changes.outputs.has-changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Generate branch name
        if: steps.detect-changes.outputs.has-changes == 'true'
        id: branch-name
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          BRANCH_NAME="notion-changes-${TIMESTAMP}"
          echo "name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "Generated branch name: ${BRANCH_NAME}"
      
      - name: Create and switch to new branch
        if: steps.detect-changes.outputs.has-changes == 'true'
        run: |
          git checkout -b ${{ steps.branch-name.outputs.name }}
          echo "Switched to branch: ${{ steps.branch-name.outputs.name }}"
      
      - name: Check for duplicate PRs
        if: steps.detect-changes.outputs.has-changes == 'true'
        id: pr-check
        run: |
          # Use dedicated script for comprehensive duplicate PR detection
          ./scripts/check-duplicate-prs.sh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Commit changes (New PR)
        if: steps.detect-changes.outputs.has-changes == 'true' && steps.pr-check.outputs.action == 'create_new'
        run: |
          git add reports/ state/ --force
          git commit -m "feat: update Notion database change report

          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

          Co-Authored-By: Claude <noreply@anthropic.com>"
      
      - name: Push branch and create PR (New PR)
        if: steps.detect-changes.outputs.has-changes == 'true' && steps.pr-check.outputs.action == 'create_new'
        run: |
          git push origin ${{ steps.branch-name.outputs.name }}
          
          # Create PR body with actual report content
          REPORT_FILE="${{ steps.detect-changes.outputs.report-file }}"
          TOTAL_CHANGES="${{ steps.detect-changes.outputs.total-changes }}"
          
          # Generate timestamp in JST
          TIMESTAMP=$(TZ=Asia/Tokyo date +'%Y-%m-%d %H:%M:%S JST')
          
          # Create PR body with report content
          cat > /tmp/pr_body.md <<EOF
          ## ðŸ“‹ Notion Database Changes Summary
          
          **Generated at**: ${TIMESTAMP}
          **Total changes detected**: ${TOTAL_CHANGES}
          **Report file**: ${REPORT_FILE}
          
          ## ðŸ“Š Detailed Changes
          
          EOF
          
          # Add the actual report content
          if [ -f "$REPORT_FILE" ]; then
            cat "$REPORT_FILE" >> /tmp/pr_body.md
          else
            echo "Report file not found: $REPORT_FILE" >> /tmp/pr_body.md
          fi
          
          # Add footer
          cat >> /tmp/pr_body.md <<EOF
          
          ---
          
          ðŸ¤– This PR was automatically generated by the Notion Change Detection workflow.
          
          For questions or issues, please check the [workflow documentation](./docs/).
          EOF
          
          gh pr create --title "feat: update Notion database changes - $(TZ=Asia/Tokyo date +'%Y-%m-%d %H:%M')" --body-file /tmp/pr_body.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update existing PR (Incremental Changes)
        if: steps.detect-changes.outputs.has-changes == 'true' && steps.pr-check.outputs.action == 'update_existing'
        run: |
          echo "ðŸ”„ Updating existing PR #${{ steps.pr-check.outputs.target_pr_number }}"
          echo "   Target branch: ${{ steps.pr-check.outputs.target_pr_branch }}"
          
          # Stash any untracked files that might conflict
          git add reports/ state/ --force
          git stash push -u -m "Temp stash before incremental update"
          
          # Fetch and checkout existing PR branch
          git fetch origin
          git checkout -B ${{ steps.pr-check.outputs.target_pr_branch }} origin/${{ steps.pr-check.outputs.target_pr_branch }}
          
          # Apply the stashed changes
          git stash pop || echo "No conflicts in stash pop"
          
          # Generate incremental report
          REPORT_FILE="${{ steps.detect-changes.outputs.report-file }}"
          TOTAL_CHANGES="${{ steps.detect-changes.outputs.total-changes }}"
          TIMESTAMP=$(TZ=Asia/Tokyo date +'%Y-%m-%d %H:%M:%S JST')
          
          # Add new changes to existing PR branch
          git add reports/ state/ --force
          git commit -m "feat: add incremental Notion database changes - $(TZ=Asia/Tokyo date +'%Y-%m-%d')

          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
          
          # Push incremental changes
          git push origin ${{ steps.pr-check.outputs.target_pr_branch }}
          
          # Update PR description with latest report content
          cat > /tmp/pr_update_body.md <<EOF
          ## ðŸ“‹ Notion Database Changes Summary (Updated)
          
          **Last updated**: ${TIMESTAMP}
          **Total changes detected**: ${TOTAL_CHANGES}
          **Latest report**: ${REPORT_FILE}
          
          ## ðŸ“Š Latest Changes
          
          EOF
          
          # Add the latest report content
          if [ -f "$REPORT_FILE" ]; then
            cat "$REPORT_FILE" >> /tmp/pr_update_body.md
          else
            echo "Latest report file not found: $REPORT_FILE" >> /tmp/pr_update_body.md
          fi
          
          # Add footer
          cat >> /tmp/pr_update_body.md <<EOF
          
          ---
          
          ðŸ¤– This PR was automatically updated by the Notion Change Detection workflow.
          
          **Previous updates**: Check the commit history for incremental changes.
          
          For questions or issues, please check the [workflow documentation](./docs/).
          EOF
          
          # Update existing PR
          gh pr edit "${{ steps.pr-check.outputs.target_pr_number }}" --body-file /tmp/pr_update_body.md
          
          echo "âœ… Successfully updated existing PR #${{ steps.pr-check.outputs.target_pr_number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}